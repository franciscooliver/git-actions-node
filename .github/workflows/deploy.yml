
name: CI

# 1
# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: 'v1'
        required: true
#2
env:
  REGISTRY: "registry.digitalocean.com/francisco-oliver"
  IMAGE_NAME: "franciscoalves90/ci-node"

#3
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo 
        uses: actions/checkout@v2
        
      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600
      
      - name: Remove all old images
        run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
        
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    
    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          envs: IMAGE_NAME,REGISTRY,{{ secrets.DIGITALOCEAN_ACCESS_TOKEN }},GITHUB_SHA
          script: |
            # Login to registry
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com
            # Stop running container
            docker stop $(echo $IMAGE_NAME)
            # Remove old container
            docker rm $(echo $IMAGE_NAME)
            # Run a new container from a new image
            docker run -d \
            --restart always \
            --name $(echo $IMAGE_NAME) \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
view rawbuild-and-deploy.yml hosted with ‚ù§ by GitHub

# name: CI

# on: [push]

# jobs:
#   deploy:
#     if: github.ref == 'refs/heads/develop'
#     runs-on: [ubuntu-latest]
#     steps:
#       - uses: actions/checkout@v1
#       - name: Deploy APP
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.SERVER_IP }}
#           username: ${{ secrets.SERVER_USERNAME }}
#           #password: ${{ secrets.SERVER_PASSWORD }}
#           key: ${{ secrets.SERVER_SSH_KEY }}
#           passphrase: ${{ secrets.PASSPHRASE }}
#           script_stop: true
#           command_timeout: 200m
#           script: /
#             cd /home/apps/api/git-actions-node
#             git pull
#             cd ..
#             docker-compose build --force-rm --no-cache --compress
#             docker-compose -f docker-compose.prod.yml up -d
